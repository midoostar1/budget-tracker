version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: budget-tracker-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: budget_tracker
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Budget Tracker API
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: budget-tracker-api
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Server
      NODE_ENV: development
      PORT: 3000
      
      # Database (connects to postgres service)
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/budget_tracker?schema=public
      
      # JWT (use strong secrets in production)
      JWT_SECRET: development-jwt-secret-min-32-chars-change-in-production
      
      # CORS (allow all in development)
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:19006,http://localhost:8081
      
      # Rate Limiting
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      
      # Logging
      LOG_LEVEL: debug
      
      # Cron Secret
      CRON_SECRET: development-cron-secret
      
      # Optional: Add your credentials as needed
      # GOOGLE_WEB_CLIENT_ID: your-client-id
      # GCS_BUCKET_NAME: your-bucket
      # VERYFI_CLIENT_ID: your-client-id
      # FIREBASE_ADMIN_JSON_BASE64: your-base64-json
    
    ports:
      - "3000:3000"
    
    volumes:
      # Mount source code for development (hot reload with tsx watch)
      - ./src:/app/src:ro
      - ./prisma:/app/prisma:ro
    
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Adminer for database management
  adminer:
    image: adminer:latest
    container_name: budget-tracker-adminer
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: nette

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: budget-tracker-network

