openapi: 3.0.3
info:
  title: Transaction Management API
  description: REST API for managing financial transactions and categories
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Development server

paths:
  /transactions:
    post:
      summary: Create a new transaction
      tags:
        - Transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - description
                - categoryId
              properties:
                amount:
                  type: string
                  description: Transaction amount as decimal string
                  example: "123.45"
                description:
                  type: string
                  minLength: 1
                  maxLength: 500
                  example: "Grocery shopping at Whole Foods"
                categoryId:
                  type: string
                  format: uuid
                  example: "550e8400-e29b-41d4-a716-446655440000"
                date:
                  type: string
                  format: date-time
                  description: Transaction date (defaults to current time)
                  example: "2025-10-09T12:00:00Z"
      responses:
        '201':
          description: Transaction created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: Get transactions with optional filters
      tags:
        - Transactions
      parameters:
        - in: query
          name: from
          schema:
            type: string
            format: date-time
          description: Filter transactions from this date
          example: "2025-10-01T00:00:00Z"
        - in: query
          name: to
          schema:
            type: string
            format: date-time
          description: Filter transactions until this date
          example: "2025-10-09T23:59:59Z"
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - in: query
          name: pageSize
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of items per page
      responses:
        '200':
          description: Transactions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTransactions'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /transactions/{id}:
    patch:
      summary: Update a transaction
      tags:
        - Transactions
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Transaction ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              minProperties: 1
              properties:
                amount:
                  type: string
                  description: Updated transaction amount
                  example: "150.00"
                description:
                  type: string
                  minLength: 1
                  maxLength: 500
                  example: "Updated description"
                categoryId:
                  type: string
                  format: uuid
                  example: "550e8400-e29b-41d4-a716-446655440000"
                date:
                  type: string
                  format: date-time
                  example: "2025-10-09T14:30:00Z"
      responses:
        '200':
          description: Transaction updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Transaction or category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete a transaction
      tags:
        - Transactions
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Transaction ID
      responses:
        '204':
          description: Transaction deleted successfully
        '404':
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /categories:
    get:
      summary: Get all categories
      tags:
        - Categories
      responses:
        '200':
          description: Categories retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'

    post:
      summary: Create a new category
      tags:
        - Categories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - color
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 100
                  example: "Entertainment"
                color:
                  type: string
                  pattern: '^#[0-9A-Fa-f]{6}$'
                  example: "#FF5733"
                icon:
                  type: string
                  example: "ðŸŽ¬"
      responses:
        '201':
          description: Category created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Transaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
        amount:
          type: string
          description: Transaction amount as decimal string
        description:
          type: string
        categoryId:
          type: string
          format: uuid
        date:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    PaginatedTransactions:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        pagination:
          type: object
          properties:
            page:
              type: integer
            pageSize:
              type: integer
            total:
              type: integer
            totalPages:
              type: integer

    Category:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        color:
          type: string
        icon:
          type: string
        createdAt:
          type: string
          format: date-time

    Error:
      type: object
      properties:
        error:
          type: string
        details:
          type: array
          items:
            type: object